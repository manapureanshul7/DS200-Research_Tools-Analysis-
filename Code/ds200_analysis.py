# -*- coding: utf-8 -*-
"""DS200-Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fN-XnYQxeZxWY7cP8u67R9DhMZIK3EKy
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

#Loading File
file_path = 'Chapter_29_Education-Table_29.6_Ger_Statewise_Higher_Edu.csv'
df = pd.read_csv(file_path)

# Cleaning data
# Replace 'NA' with NaN
df.replace('NA', np.nan, inplace=True)

#All columns to numeric type, except the first one
for col in df.columns[1:]:
    df[col] = pd.to_numeric(df[col], errors='coerce')

# Dropping rows with NaN in 'ALL CATEGORIES-TOTAL' column
df.dropna(subset=['ALL CATEGORIES-TOTAL'], inplace=True)

# 1. Scatter Plot: Male vs. Female GER
plt.figure(figsize=(10, 6))
plt.scatter(df['ALL CATEGORIES-MALE'], df['ALL CATEGORIES-FEMALE'], alpha=0.7, edgecolors='b', s=100)
plt.title('Gross Enrolment Ratio (GER): Male vs. Female in Higher Education', fontsize=16)
plt.xlabel('Male GER (%)', fontsize=12)
plt.ylabel('Female GER (%)', fontsize=12)
plt.grid(True)
plt.savefig('scatter_plot_male_vs_female_ger.png')
print("Scatter plot 'scatter_plot_male_vs_female_ger.png' saved.")

# 2. Box Plot: Distribution of Total GER
plt.figure(figsize=(8, 6))
plt.boxplot(df['ALL CATEGORIES-TOTAL'], patch_artist=True)
plt.title('Distribution of Gross Enrolment Ratio (GER) in Higher Education', fontsize=16)
plt.ylabel('Total GER (%)', fontsize=12)
plt.xticks([1], ['All States & UTs'])
plt.grid(True)
plt.savefig('box_plot_ger_distribution.png')
print("Box plot 'box_plot_ger_distribution.png' saved.")

# 3. Bar Plot: Total GER by State/UT
# Sort the dataframe by the total GER for a cleaner plot
df_sorted = df.sort_values('ALL CATEGORIES-TOTAL', ascending=True)

plt.figure(figsize=(12, 10))
plt.barh(df_sorted['STATE/Ut'], df_sorted['ALL CATEGORIES-TOTAL'], color='skyblue')
plt.xlabel('Total GER (%)', fontsize=12)
plt.title('Gross Enrolment Ratio (GER) in Higher Education by State/UT', fontsize=16)
plt.tight_layout() # Adjust plot to ensure everything fits without overlapping
plt.savefig('bar_plot_ger_by_state.png')
print("Bar plot 'bar_plot_ger_by_state.png' saved.")